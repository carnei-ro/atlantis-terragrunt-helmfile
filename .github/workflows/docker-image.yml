# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Create and publish a Docker image

on:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  ATLANTIS_VERSION: v0.19.2
  TERRAGRUNT_VERSION: "v0.36.6"
  INFRACOST_VERSION: "v0.9.21"
  HELM_VERSION: "3.8.1"
  HELMFILE_VERSION: "0.143.0"
  KUBECTL_VERSION: "1.21.11"
  KUSTOMIZE_VERSION: "3.10.0"

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=raw,value=${{ env.ATLANTIS_VERSION }}

      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64, linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            atlantis_version=${{ env.ATLANTIS_VERSION }}
            terragrunt_version=${{ env.TERRAGRUNT_VERSION }}
            infracost_version=${{ env.INFRACOST_VERSION }}
            helm_version=${{ env.HELM_VERSION }}
            helmfile_version=${{ env.HELMFILE_VERSION }}
            kubectl_version=${{ env.KUBECTL_VERSION }}
            kustomize_version=${{ env.KUSTOMIZE_VERSION }}
